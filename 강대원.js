export const 강대원 = (callback) => {
  for (let i = 0; i < 100; i++) {
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
    callback();
  }
};
